import{r as p,z as o,m,j as y}from"./vendors-Dtot3KuJ.js";import{f as R,al as g,am as _,a3 as i,H as E,G as v,M as w}from"./index-rYEy9Y7-.js";import{R as S,a as O,b}from"./constants-CYte1oil.js";import{M as C}from"./Skeleton-DP44cgo5.js";const A=p.forwardRef(({className:c,color:e,...r},t)=>p.createElement("div",{...r,ref:t,className:R("inline-flex items-center rounded-[6px] px-1 py-[1px]","typography-caption3 font-medium","select-none",{"bg-accent/[0.12] text-accent":e==="blue","bg-dynamicOrange/[0.12] text-dynamicOrange":e==="orange","bg-dynamicGreen/[0.12] text-dynamicGreen":e==="green","bg-dynamicRed/[0.12] text-dynamicRed":e==="red","bg-dynamicPurple/[0.12] text-dynamicPurple":e==="purple"},c)}));A.displayName="Label";const F={TON_TRANSFER:32736093},l={v1:"v1",v2:"v2"},h=o.object({address:o.string(),major_version:o.number(),minor_version:o.number(),default:o.boolean(),pton_master_address:o.string(),pton_wallet_address:o.string(),pton_version:o.string(),router_type:o.enum(["ConstantProduct"])});class x extends Error{constructor(e){const r="RoutersFetchMetadataError",s=["Could not fetch routers metadata",e];super(...s),this.name=r,Object.setPrototypeOf(this,new.target.prototype)}}let P=class{constructor(e){this.dependencies=e,this.cache=new g({StorageService:e.StorageService,STORAGE_KEY:e.CACHE_STORAGE_KEY,DEFAULT_VALUE:new Map,SERIALIZER:r=>JSON.stringify(Array.from(r.entries())),DESERIALIZER:r=>_.stringToJSON().transform(t=>o.array(o.tuple([o.string(),h])).transform(s=>new Map(s)).parse(t)).parse(r)})}cache;async fetchRoutersMetadata(){const{logger:e,StonAPI:r}=this.dependencies,t=e.child("fetchRoutersMetadata");try{t.log("fetching routers");const s=await r.getRoutersList({});if(s instanceof Error)throw s;const a=s.routers.reduce((n,d)=>{const u=h.safeParse(d);return u.success?n.push(u.data):t.warn("fail to parse router metadata",d,u.error),n},[]);return t.log("fetched",a),this.updateRoutersMetadataInCache(a),this.getCachedRoutersMetadata()}catch(s){const a=new x({cause:s});return t.error("failed to fetch",a),a}}buildRouterEntity(e){const{logger:r}=this.dependencies;try{return new S({address:new i(e.address),version:(()=>{if(e.major_version===1&&e.minor_version===0)return O.v1;throw new Error("Unknown router version: "+JSON.stringify(e))})(),isDefault:e.default,type:(()=>{switch(e.router_type){case"ConstantProduct":return b.CPI;default:throw new Error(`Unknown router type: ${e.router_type}`)}})(),proxyTonContractAddress:new i(e.pton_master_address),proxyTonWalletAddress:new i(e.pton_wallet_address),proxyTonVersion:(()=>{switch(e.pton_version){case"1.0":return l.v1;case"2.0":case"2.1":return l.v2;default:throw new Error(`Unknown pTon version: ${e.pton_version}`)}})()})}catch(t){return r.child("buildRouterEntity").warn("failed to create entity from metadata",e,t),null}}getCachedRoutersMetadata(){return Array.from(this.cache.data.values())}updateRoutersMetadataInCache(e){const r=new Map(e.map(t=>[t.address,t]));this.cache.updateCache(r)}};const T=new P({logger:E.child("services","RoutersService"),StonAPI:v,StorageService:w,CACHE_STORAGE_KEY:"routers"});var D=Object.defineProperty,N=Object.getOwnPropertyDescriptor,I=(c,e,r,t)=>{for(var s=N(e,r),a=c.length-1,n;a>=0;a--)(n=c[a])&&(s=n(e,r,s)||s);return s&&D(e,r,s),s};let f=class{_routersQuery;constructor(e){const{RoutersService:r}=e;this._routersQuery=new C(()=>({queryKey:["RoutersStore._routersQuery"],initialData:r.getCachedRoutersMetadata(),queryFn:async()=>{const t=await r.fetchRoutersMetadata();if(t instanceof Error)throw t;return t},select:t=>{const s=new Map;return t.forEach(a=>{const n=r.buildRouterEntity(a);n&&s.set(n.key,n)}),s},refetchOnMount:!0,refetchOnWindowFocus:!1})),m(this,void 0,{name:"RoutersStore"})}get routers(){const{data:e}=this._routersQuery.state;return e?[...e.values()]:void 0}getRouterByAddress(e){return this._routersQuery.state.data?.get(e.key)}getDefaultRouter(){return this.routers?.find(r=>r.isDefault)}fetchRouters=async()=>(await this._routersQuery.refetch(),this.routers)};I([y],f.prototype,"routers");const U=new f({RoutersService:T});export{U as R,F as a,A as i,l as p};
